{"version":3,"sources":["app/notes.cljs"],"mappings":";AAQA,yBAAA,zBAAMA,0DAAcC,EAAEC;AAAtB,AACE,IAAMC,UAAQ,AAAA,AAAIF;AAAlB,AACE,AAACG,mDAAMF,QAAQG;;AACf,OAACC,sBAAOC,aAAS,8CAAA,AAAAC,8BAAA,5EAACC,8DAAOF,uEAAkBJ;;AAE/C,sBAAA,tBAAMO,oDAAWT,EAAEE;AAAnB,AACE,AAACG,sBAAOH,QAAQ,AAAA,AAAIF;;AACpB,AAACK,sBAAOC,aAAS,8CAAA,AAAAC,8BAAA,5EAACC,8DAAOF,mFAAuB,AAACI;;AACjD,OAACL,sBAAOC,aAAS,8CAAA,AAAAC,8BAAA,yDAAA,AAAAA,rIAACC,8DAAOF,uFAAmBJ;;AAE9C,kBAAA,lBAAMS;AAAN,AACE,IAAMT,UAAQ,AAACU,gDAAO,AAAA,uFAAA,AAAAL,gBAAWD;IAC3BL,UAAQ,gDAAA,hDAACW;cADf,VAEMC;iBAFN,bAGMC;AAHN,AAIE;AAAA,AAAA,0FAAA,8DAEG,kBAAA,AAAAP,0BAAA,mFAAA,0FAAA,2CAAA,iEAAA,KAAA,0DAAA,WAAAQ,7WAAKd;AAAL,AAGc,8BAAAc,vBAAChB,wCAAeE;GAH9B,+DAAA,WAAAe;AAAA,AAIgB,2BAAAA,pBAACP,qCAAYP;GAJ7B,sDAAA,AAAAK,yBAAA,uDAAA,2CAAA,0DAAA,qDAAA,uDAAA,qDAAA,yDAAA,qDAAA,gEAAA,qDAAA,8EAAA,2EAAA,2FAAA,mFAAA,mDAAA,2CAAA,8DAAA,IAAA,uDAAA,2CAAA,mEAAA,mFAAA,4DAAA,p0CAKYL,0mBAKYe,6EACAH,sEACHD,gbAEKA,wEACGC;AAf7B,AAgBoB,OAACX,mDAAMF,QAAQG;WAChC,kBAAA,AAAAG,0BAAA,6JAAA,vKAAOL,UACL,AAACgB,yEAAsB,yDAAA,AAAAX,zDAACY,yEAAUjB","names":["app.notes/on-focus-out","e","focused","content","cljs.core.swap_BANG_","cljs.core/not","cljs.core/reset!","app.db/store","cljs.core/deref","cljs.core.assoc","app.notes/on-change","app.date/get-date-today","app.notes/notes","reagent.core.atom","padding","min-height","p1__18949#","p1__18950#","app.theme/bg","nextjournal.markdown.transform.__GT_hiccup","nextjournal.markdown.parse"],"sourcesContent":["(ns app.notes\n  (:require [app.db :as db]\n            [app.theme :as theme]\n            [app.date :as date]\n            [reagent.core :as r]\n            [nextjournal.markdown :as md]\n            [nextjournal.markdown.transform :as md.transform]))\n\n(defn on-focus-out [e focused]\n  (let [content (-> e .-target .-value)]\n    (swap! focused not)\n    (reset! db/store (assoc @db/store :content content))))\n\n(defn on-change [e content]\n  (reset! content (-> e .-target .-value))\n  (reset! db/store (assoc @db/store :last-updated (date/get-date-today)))\n  (reset! db/store (assoc @db/store :content @content)))\n\n(defn notes []\n  (let [content (r/atom (:content @db/store))\n        focused (r/atom false)\n        padding \"8px 0\"\n        min-height :92dvh]\n    (fn []\n      [:div#notes\n       (if @focused\n         [:textarea#notes-content\n          {:auto-focus true\n           :on-blur #(on-focus-out % focused)\n           :on-change #(on-change % content)\n           :value @content\n           :style {:outline :none\n                   :width :100%\n                   :border :none\n                   :font-size :16px\n                   :background theme/bg\n                   :min-height min-height\n                   :padding padding}}]\n         [:div {:tab-index 0\n                :style {:padding padding\n                        :min-height min-height}\n                :on-focus #(swap! focused not)}\n          (when @content\n            (md.transform/->hiccup (md/parse @content)))])])))\n"]}